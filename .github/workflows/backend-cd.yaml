name: Backend Continuous Deployment

on:
  # Manual trigger using the workflow_dispatch event
  workflow_dispatch:

  pull_request:
    types: [ closed ]
    branches:
      - main
    paths:
      - 'cicd-backend/**'
      - '.github/workflows/backend**'

jobs:
  lint:
    if: github.event.pull_request.merged == true
    name: Lint Job
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install pipenv && pipenv install --dev
        working-directory: cicd-backend/backend

      - name: Run linting
        run: pipenv run lint
        working-directory: cicd-backend/backend
  test:
    if: github.event.pull_request.merged == true
    name: Test Job
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'


      - name: Install dependencies
        run: pip install pipenv && pipenv install --dev
        working-directory: cicd-backend/backend

      - name: Run tests
        run: pipenv run test
        working-directory: cicd-backend/backend
  build:
    if: github.event.pull_request.merged == true
    name: Build Job
    runs-on: ubuntu-latest
    needs: [lint, test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'false'

      - name: Build application using Docker and push to ECR
        run: |
          docker build -t ${{ secrets.AWS_REGISTRY_URL_BE }}/backend:latest .
          docker push ${{ secrets.AWS_REGISTRY_URL_BE }}/backend:latest
        working-directory: cicd-backend/backend

      - name: Update kubeconfig for EKS cluster
        run: |
          aws eks update-kubeconfig --name ${{ secrets.CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}

      - name: Deploy to EKS
        run: |
          kubectl apply --force -k .
        working-directory: cicd-backend/backend/k8s