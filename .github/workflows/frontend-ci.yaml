# Workflow name
name: Frontend Continuous Integration

# Triggers for the workflow
on:
  # Manual trigger using the workflow_dispatch event
  workflow_dispatch:

  # Automatic trigger on pull request events targeting the main branch
  pull_request:
    branches:
      - main
    paths:
      - 'cicd-frontend/**'
      - '.github/workflows/frontend**'

#
## Jobs defined in the workflow
jobs:
  lint:
    name: Lint Job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-npm-

      - name: Install dependencies
        run: npm install
        working-directory: cicd-frontend/frontend

      - name: Run linting
        run: npm run lint
        working-directory: cicd-frontend/frontend
  test:
    name: Test Job
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies
        run: npm install
        working-directory: cicd-frontend/frontend

      - name: Run tests
        run: npm run test
        working-directory: cicd-frontend/frontend

  build-actions:
    needs: [ lint, test ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build application using Docker and push to ECR
        run: docker build --build-arg=REACT_APP_MOVIE_API_URL=http://localhost:5000 --tag=mp-frontend:latest .
        working-directory: cicd-frontend/frontend
